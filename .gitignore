################################################################################
# This .gitignore file was automatically created by Microsoft(R) Visual Studio.
################################################################################

# .NET Core / .NET 9 build outputs
bin/
obj/
out/
[Bb]in/
[Oo]bj/
[Oo]ut/

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*.exe
*.dll
*.pdb
*.lib
*.exp
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Visual Studio temporary files, build results, and
# files generated by popular Visual Studio add-ons.
.vs/

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# JetBrains Rider
.idea/
*.sln.iml

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Microsoft Azure Web App publish settings
# Comment out if needed for Azure deployment
*.PublishSettings

# Microsoft Azure Web App temp files
publish/

# Package Files
*.nupkg
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# ===============================================
# GalaxyDL Specific Ignores
# ===============================================

# Authentication files (SECURITY CRITICAL)
auth.json
gog_auth.json
*.token
*.key
credentials.json
gogauth.json

# Archive directories (test data can be large)
archive/
test_archive/
downloads/
gog_archive/
temp_archive/

# Logs and output
logs/
*.log
output.txt
debug.txt

# Test data
test_data/
sample_manifests/
test_downloads/

# Local configuration overrides
appsettings.local.json
appsettings.Development.local.json
appsettings.Production.local.json

# Temporary working directories
temp/
tmp/
working/

# Python references (keep structure but ignore temp files)
**/python\ refs/**/*.pyc
**/python\ refs/**/__pycache__/

# Backup files
*.bak
*.backup
*.orig

# Coverage and test results
coverage/
TestResults/
*.trx
*.coverage
*.coveragexml
*.testlog

# Profiling
*.psess
*.vsp
*.vspx
*.sap

# Fakes assemblies
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js (if any frontend tools are added later)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd
